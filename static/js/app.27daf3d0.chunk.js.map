{"version":3,"sources":["Images/logo/logo_combined.png","Images/btn_google_signin_dark_normal_web.png","Utils/appSlice.ts","Utils/accountSlice.ts","Utils/expenseSlice.ts","Utils/remainingBudgetSlice.ts","Utils/userDataSlice.ts","Utils/store.js","Components/ProfileIcon.tsx","Navigation/Header.tsx","Screens/Profile.tsx","Navigation/CustomDrawer.tsx","Components/ExpenseCard.tsx","Components/ExpenseDetailView.tsx","Components/ExpenseList.tsx","Components/AddAccountButton.tsx","Components/AccountModal.tsx","Components/AccountsDropDown.tsx","Components/BudgetCard.tsx","Components/ExpenseModal.tsx","Components/Expenses/AddExpense.tsx","Screens/Overview.tsx","Screens/ContactForm.tsx","Screens/Login.tsx","Navigation/DrawerNavigation.tsx","Navigation/AuthStack.tsx","Navigation/RootNavigation.tsx","Utils/useAssets.ts","App.tsx","index.js"],"names":["module","exports","appSlice","createSlice","name","initialState","appReady","modalMode","accountModalVisibility","expenseModalVisibility","expenseDetailsModalVisiblity","reducers","setAppReady","state","action","payload","setModalMode","setAccountModalVisibility","setExpenseModalVisibility","setExpenseDetailsModalVisiblity","actions","list","label","saved","goal","date","Number","Date","now","id","accountSlice","addAccount","editAccount","updatedAccounts","map","account","deleteAccount","filteredAccounts","filter","selectedId","expenseSlice","addExpense","setSelectedId","editExpense","updateExpense","expense","deleteExpense","filteredExpense","budgetSlice","remaining","accountsTotal","expensesTotal","totalRemaining","recalculateBudget","accounts","item","expenses","userDataSlice","data","firstName","lastName","avatar","email","loggedIn","setUserData","setIsLoggedIn","store","configureStore","reducer","app","appReducer","accountReducer","expenseReducer","budgets","remainingBudgetReducer","user","userDataReducer","styles","StyleSheet","create","profileImage","width","height","borderRadius","alignSelf","ProfileIcon","userData","useSelector","View","TouchableOpacity","Image","source","uri","style","Header","navigation","container","onPress","toggleDrawer","MaterialIcons","size","color","icon","flexDirection","justifyContent","padding","paddingBottom","Profile","Text","userName","userEmail","backgroundColor","alignItems","minHeight","textAlign","fontSize","fontFamily","flex","profileContainer","marginLeft","marginRight","borderBottomColor","borderBottomWidth","CustomDrawer","props","DrawerContentScrollView","closeDrawer","AntDesign","DrawerItemList","ExpenseCard","index","LinearGradient","colors","linearGradient","expenseLabel","expenseDate","toLocaleDateString","expenseAmount","bar","progress","unfilledColor","borderColor","expenseProgress","aspectRatio","margin","lineHeight","position","paddingVertical","top","bottom","paddingHorizontal","ExpenseDetailView","useWindowDimensions","dispatch","useDispatch","start","x","y","end","expenseContainer","Feather","exitIcon","budgetTextTop","budgetText","modal","savingText","budgetTextBottom","transactionsExpenses","RecentTransactions","marginTop","Platform","OS","fontWeight","toggleArrow","paddingRight","paddingTop","borderBottomLeftRadius","borderBottomRightRadius","ExpenseList","setAmount","setLabel","setExpense","appData","useEffect","generateExpenses","flexWrap","AddAccountButton","setIsVisible","setAccount","setMode","blankAccount","AccountModal","memo","isVisible","mode","useState","amount","confirm","setConfirm","Modal","transparent","confirmContainer","buttonText","confirmButton","confirmButtonText","visible","textInputs","TextInput","amountInput","placeholder","onChangeText","text","newText","i","length","indexOf","alert","onChanged","value","toString","labelInput","addButton","newAccount","uuid","v4","accountUpdate","marginBottom","wrapButton","paddingLeft","dropDownWrapper","heading","horizontalRule","headingContainer","AccountsDropDown","listOfAccounts","generateList","toLocaleString","BudgetCard","budgetDetails","setBudgetDetails","moneyRem","moneyTotal","budgetWrapper","toggleWrap","Entypo","toggleDropDown","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","titleContainer","titleText","inputStyle","borderWidth","xIcon","buttonWrap","buttonStyle","subContainer","textContainer","modalSize","ExpenseModal","setDate","open","setOpen","isDatePickerVisible","setDatePickerVisibility","hideDatePicker","onDismissSingle","useCallback","onConfirmSingle","params","undefined","number","onChangeTextAmount","Button","title","locale","onDismiss","onConfirm","onCancel","newExpense","runAddExpense","expenseUpdate","runEditExpense","AddExpense","plusModal","right","scrollViewContainer","budgetCardHolder","expenseCardHolder","Overview","blankExpense","ScrollView","header","inputHeaders","inputs","picker","messageInput","submitButton","ContactForm","setEmail","subject","setSubject","message","setMessage","selectedValue","onValueChange","Item","e","numberOfLines","multiline","Pressable","trim","mailto","Linking","openURL","WebBrowser","SplashScreen","bunnyLogo","karotSlogan","loginButton","splashImageContainer","Login","splashImagesAnimation","useRef","Animated","Value","current","loginButtonAnimation","accessToken","setAccessToken","Google","expoClientId","webClientId","request","response","promptAsync","type","authentication","a","async","fetch","headers","Authorization","json","then","responseUserData","given_name","family_name","picture","timing","delay","toValue","duration","useNativeDriver","easing","Easing","bezier","onLogoImageReady","transform","translateY","maxWidth","resizeMode","logoCombinedImage","fadeDuration","onLoadEnd","opacity","disabled","showInRecents","GoogleSignIn","accessible","accessibilityLabel","Drawer","createDrawerNavigator","DrawerNavigator","Navigator","drawerContent","screenOptions","drawerActiveBackgroundColor","drawerActiveTintColor","drawerLabelStyle","Screen","component","options","drawerIcon","FontAwesome","Stack","createStackNavigator","AuthStack","headerShown","urlPrefix","RootNavigation","Font","Sarabun_300Light","Sarabun_400Regular","Sarabun_600SemiBold","Sarabun_700Bold","Asset","loadAsync","require","useAssets","isLoggedIn","rootPath","linking","prefixes","config","screens","Logout","NavigationContainer","DrawerNavigation","safeAreaContainer","RNStatusBar","currentHeight","registerRootComponent","SafeAreaView","StatusBar"],"mappings":"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","file":"static/js/app.27daf3d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_combined.0741e8aa.png\";","module.exports = __webpack_public_path__ + \"static/media/btn_google_signin_dark_normal_web.a8673c5e.png\";","import { createSlice } from \"@reduxjs/toolkit\";\nimport { AppDataType } from \"./types\";\n\nconst initialState: AppDataType = {\n\tappReady: false,\n\tmodalMode: \"add\",\n\taccountModalVisibility: false,\n\texpenseModalVisibility: false,\n\texpenseDetailsModalVisiblity: false,\n};\n\nexport const appSlice = createSlice({\n\tname: \"data\",\n\tinitialState,\n\treducers: {\n\t\tsetAppReady(state, action) { \n\t\t\tstate.appReady = action.payload; \n\t\t  },\n\t\tsetModalMode: (state, action) => {\n\t\t\tstate.modalMode = action.payload;\n\t\t},\n\t\tsetAccountModalVisibility: (state, action) => {\n\t\t\tstate.accountModalVisibility = action.payload;\n\t\t},\n\t\tsetExpenseModalVisibility: (state, action) => {\n\t\t\tstate.expenseModalVisibility = action.payload;\n\t\t},\n\t\tsetExpenseDetailsModalVisiblity: (state, action) => {\n\t\t\tstate.expenseDetailsModalVisiblity = action.payload;\n\t\t},\n\t},\n});\n\nexport const { setAppReady,setModalMode, setAccountModalVisibility,setExpenseModalVisibility, setExpenseDetailsModalVisiblity } = appSlice.actions;\n\nexport default appSlice.reducer;\n\n\n\n\n// Action creators are generated for each case reducer function \n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { AccountType } from \"./types\";\n\ninterface InitialStateType {\n  list: AccountType[];\n}\n\nconst initialState: InitialStateType = {\n  list: [\n    {\n      label: \"bank\",\n      saved: 1500,\n      goal: 1500,\n      date: Number(Date.now()),\n      id: \"1\",\n    },\n    {\n      label: \"Cash\",\n      saved: 50,\n      goal: 50,\n      date: Number(Date.now()),\n      id: \"2\",\n    },\n  ],\n};\n\nexport const accountSlice = createSlice({\n  name: \"accounts\",\n  initialState,\n  reducers: {\n    addAccount: (state, action) => {\n      state.list = [...state.list, action.payload];\n    },\n    editAccount: (state, action) => {\n      const updatedAccounts = state.list.map((account) =>\n        account.id === action.payload.id ? action.payload : account\n      );\n      state.list = updatedAccounts;\n    },\n    deleteAccount: (state, action) => {\n      const filteredAccounts = state.list.filter(\n        (account) => account.id !== action.payload\n      );\n      state.list = filteredAccounts;\n    },\n  },\n});\n\nexport const { addAccount, editAccount, deleteAccount } = accountSlice.actions;\n\nexport default accountSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { ExpenseType } from \"./types\";\n\ninterface InitialStateType {\n  list: ExpenseType[];\n  selectedId: number;\n}\n\nconst initialState: InitialStateType = {\n  list: [\n    {\n      label: \"Rent\",\n      saved: 1000,\n      goal: 1000,\n      date: Number(Date.now()),\n      id: \"1\",\n    },\n    {\n      label: \"Date Night\",\n      saved: 150,\n      goal: 150,\n      date: Number(Date.now()),\n      id: \"2\",\n    },\n    {\n      label: \"Electricty\",\n      saved: 100,\n      goal: 100,\n      date: Number(Date.now()),\n      id: \"3\",\n    },\n  ],\n  selectedId: -1,\n};\n\nexport const expenseSlice = createSlice({\n  name: \"expense\",\n  initialState,\n  reducers: {\n    addExpense: (state, action) => {\n      state.list = [...state.list, action.payload];\n    },\n    setSelectedId: (state, action) => {\n      state.selectedId = action.payload;\n    },\n    editExpense: (state, action) => {\n      const updateExpense = state.list.map((expense) =>\n        expense.id === action.payload.id ? action.payload : expense\n      );\n      state.list = updateExpense;\n    },\n    deleteExpense: (state, action) => {\n      const filteredExpense = state.list.filter(\n        (expense) => expense.id !== action.payload\n      );\n      state.list = filteredExpense;\n    },\n  },\n});\n\nexport const { addExpense, setSelectedId, editExpense, deleteExpense } =\n  expenseSlice.actions;\n\nexport default expenseSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RemainingBudgetType, AccountType, ExpenseType } from \"./types\";\n\ninterface InitialStateType {\n  remaining: RemainingBudgetType;\n}\n\nconst initialState: InitialStateType = {\n  remaining: {\n    accountsTotal: 0,\n    expensesTotal: 0,\n    totalRemaining: 0,\n  },\n};\n\nexport const budgetSlice = createSlice({\n  name: \"remainingBudget\",\n  initialState,\n  reducers: {\n    recalculateBudget: (\n      state,\n      action: { payload: { accounts: AccountType[]; expenses: ExpenseType[] } }\n    ) => {\n      let accountsTotal = 0;\n      action.payload.accounts.map(\n        (item: AccountType) => (accountsTotal += item.saved)\n      );\n\n      let expensesTotal = 0;\n      action.payload.expenses.map(\n        (item: ExpenseType) => (expensesTotal += item.saved)\n      );\n\n      const totalRemaining = accountsTotal - expensesTotal;\n\n      state.remaining = {\n        accountsTotal: accountsTotal,\n        expensesTotal: expensesTotal,\n        totalRemaining: totalRemaining,\n      };\n    },\n  },\n});\n\nexport const { recalculateBudget } = budgetSlice.actions;\n\nexport default budgetSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { UserDataType } from \"./types\";\n\ninterface InitialStateType {\n  data: UserDataType;\n}\n\nconst initialState: InitialStateType = {\n  data: {\n    firstName: \"\",\n    lastName: \"\",\n    avatar: \"\",\n    email: \"\",\n    loggedIn: false,\n  },\n};\n\nexport const userDataSlice = createSlice({\n  name: \"userData\",\n  initialState,\n  reducers: {\n    setUserData: (state, action) => {\n      state.data = action.payload;\n    },\n    setIsLoggedIn(state, action) { \n      state.data.loggedIn = action.payload; \n    },\n  },\n});\n\nexport const { setUserData, setIsLoggedIn } = userDataSlice.actions;\n\nexport default userDataSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport appReducer from \"./appSlice\";\nimport accountReducer from \"./accountSlice\";\nimport expenseReducer from \"./expenseSlice\";\nimport remainingBudgetReducer from \"./remainingBudgetSlice\";\nimport userDataReducer from \"./userDataSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n    accounts: accountReducer,\n    expenses: expenseReducer,\n    budgets: remainingBudgetReducer,\n    user: userDataReducer,\n  },\n});\n","import { StyleSheet,View, TouchableOpacity, Image } from \"react-native\";\nimport { useSelector} from \"react-redux\";\nimport { GlobalStateType } from \"../Utils/types\";\n\nfunction ProfileIcon() {\n\tconst userData = useSelector((state: GlobalStateType) => state.user.data);\n\treturn (\n\t\t<View>\n\t\t\t<TouchableOpacity >\n\t\t\t\t<Image source={{ uri: userData.avatar }} style={styles.profileImage} />\n\t\t\t</TouchableOpacity>\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tprofileImage: {\n\t\twidth: 30,\n\t\theight: 30,\n\t\tborderRadius: 100,\n\t\talignSelf: \"center\",\n\t},\n\t\n});\n\nexport default ProfileIcon;\n","import { StyleSheet, View } from \"react-native\";\nimport React, { FC } from \"react\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport ProfileIcon from \"../Components/ProfileIcon\";\nimport { DrawerHeaderProps } from \"@react-navigation/drawer\";\n\nconst Header: FC<DrawerHeaderProps> = ({ navigation }) => {\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity onPress={navigation.toggleDrawer}>\n        <MaterialIcons name=\"menu\" size={24} color=\"black\" />\n      </TouchableOpacity>\n      <View style={styles.icon}>\n        <TouchableOpacity onPress={navigation.toggleDrawer}>\n          <ProfileIcon />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default Header;\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n    padding: 15,\n    paddingBottom: 10,\n  },\n  icon: {\n    flexDirection: \"row\",\n  },\n});\n","import { FC } from \"react\";\nimport { View, Text, StyleSheet, Image } from \"react-native\";\nimport { useSelector } from \"react-redux\";\nimport { GlobalStateType } from \"../Utils/types\";\n\nconst Profile: FC = () => {\n  const userData = useSelector((state: GlobalStateType) => state.user.data);\n  return (\n    <View style={styles.container}>\n      <Image source={{ uri: userData.avatar }} style={styles.profileImage} />\n      <Text style={styles.userName}>\n        {userData.firstName} {userData.lastName}\n      </Text>\n      <Text style={styles.userEmail}>{userData.email}</Text>\n    </View>\n  );\n};\nexport default Profile;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingBottom: 40,\n    minHeight: 180,\n  },\n  userName: {\n    textAlign: \"center\",\n    fontSize: 20,\n    fontFamily: \"Sarabun_600SemiBold\",\n  },\n  userEmail: {\n    textAlign: \"center\",\n    fontSize: 15,\n    fontFamily: \"Sarabun_300Light\",\n  },\n  profileImage: {\n    width: 96,\n    height: 96,\n    borderRadius: 100,\n    alignSelf: \"center\",\n  },\n});\n","import React from \"react\";\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport {\n  DrawerContentScrollView,\n  DrawerItemList,\n  DrawerContentComponentProps,\n} from \"@react-navigation/drawer\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport Profile from \"../Screens/Profile\";\n\nconst CustomDrawer = (props: DrawerContentComponentProps) => {\n  return (\n    <View style={styles.container}>\n      <DrawerContentScrollView {...props}>\n        <View style={styles.profileContainer}>\n          <TouchableOpacity\n            onPress={() => {\n              props.navigation.closeDrawer();\n            }}\n          >\n            <AntDesign name=\"left\" size={24} color=\"#000\" />\n          </TouchableOpacity>\n          <Profile />\n        </View>\n        <DrawerItemList {...props} />\n      </DrawerContentScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  profileContainer: {\n    marginLeft: 15,\n    marginRight: 15,\n    borderBottomColor: \"#000\",\n    borderBottomWidth: 1,\n  },\n});\n\nexport default CustomDrawer;\n","import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n// cannot deep require import according to\n// https://github.com/oblador/react-native-progress#progressbar\nimport * as Progress from \"react-native-progress\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nexport default function ExpenseCard(expense: any, index: number) {\n  return (\n    <>\n      <View style={styles.container}>\n        <LinearGradient\n          colors={[\"#2383C9\", \"#102745\"]}\n          style={styles.linearGradient}\n        >\n          <Text style={styles.expenseLabel}>{expense.expense.label}</Text>\n          <Text style={styles.expenseDate}>\n            {new Date(expense.expense.date).toLocaleDateString()}\n          </Text>\n          <Text style={styles.expenseAmount}>${expense.expense.saved}</Text>\n          <View style={styles.bar}>\n            <Progress.Bar\n              progress={expense.expense.saved / expense.expense.goal || 0}\n              unfilledColor=\"#DBDBDB\"\n              borderColor=\"rgba(0,0,0,0)\"\n              borderRadius={5}\n              width={100}\n              height={6}\n              color=\"#05C473\"\n            />\n          </View>\n          <Text style={styles.expenseProgress}>\n            ${expense.expense.saved} of ${expense.expense.goal}\n          </Text>\n        </LinearGradient>\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 23,\n    aspectRatio: 1,\n    margin: 8,\n    width: 160,\n  },\n  expenseAmount: {\n    textAlign: \"center\",\n    fontSize: 30,\n    lineHeight: 34,\n    fontFamily: \"Sarabun_700Bold\",\n    color: \"white\",\n    position: \"absolute\",\n    paddingVertical: 73,\n  },\n  expenseLabel: {\n    fontSize: 20,\n    lineHeight: 23,\n    fontFamily: \"Sarabun_600SemiBold\",\n    color: \"white\",\n    alignSelf: \"flex-start\",\n    marginLeft: 19,\n    position: \"absolute\",\n    top: 16,\n  },\n  expenseDate: {\n    fontSize: 17,\n    lineHeight: 20,\n    fontFamily: \"Sarabun_300Light\",\n    color: \"white\",\n    alignSelf: \"flex-start\",\n    marginLeft: 19,\n    position: \"absolute\",\n    top: 40,\n  },\n  expenseProgress: {\n    fontSize: 14,\n    lineHeight: 20,\n    fontFamily: \"Sarabun_300Light\",\n    color: \"white\",\n    alignSelf: \"center\",\n    position: \"absolute\",\n    bottom: 16,\n  },\n  linearGradient: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 23,\n    width: \"100%\",\n    aspectRatio: 1,\n    alignSelf: \"center\",\n  },\n  bar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 19,\n    position: \"absolute\",\n    bottom: 36,\n  },\n});\n","import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Platform,\n  TouchableOpacity,\n  useWindowDimensions,\n} from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GlobalStateType } from \"../Utils/types\";\nimport { setSelectedId } from \"../Utils/expenseSlice\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport * as Progress from \"react-native-progress\";\nimport { Feather } from \"@expo/vector-icons\";\nimport {\n  setModalMode,\n  setExpenseModalVisibility,\n  setExpenseDetailsModalVisiblity,\n} from \"../Utils/appSlice\";\n\nexport default function ExpenseDetailView() {\n  const { width } = useWindowDimensions();\n\n  const dispatch = useDispatch();\n\n  const expenses = useSelector((state: GlobalStateType) => state.expenses);\n\n  const expense = expenses.list[expenses.selectedId];\n\n  return (\n    <LinearGradient\n      start={{ x: 0, y: 0 }}\n      end={{ x: 1.6, y: 1 }}\n      colors={[\"#2383C9\", \"#102745\"]}\n      style={[\n        styles.linearGradient,\n        {\n          width: width - 30 > 380 ? 380 : width - 30,\n        },\n      ]}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          dispatch(setExpenseModalVisibility(true));\n          dispatch(setModalMode(\"edit\"));\n        }}\n        style={styles.expenseContainer}\n      >\n        <Feather\n          style={styles.exitIcon}\n          name=\"x-circle\"\n          size={24}\n          color=\"#FFFFFF\"\n          onPress={() => {\n            dispatch(setSelectedId(-1));\n            dispatch(setExpenseDetailsModalVisiblity(false));\n          }}\n        />\n        <Text style={styles.budgetTextTop}>{expense.label}</Text>\n        <Text style={styles.budgetText}>\n          {new Date(expense.date).toLocaleDateString()}\n        </Text>\n        <View style={styles.modal}>\n          <Text style={styles.savingText}>${expense.saved}</Text>\n          <Text style={styles.budgetTextBottom}>\n            ${expense.saved} of ${expense.goal}\n          </Text>\n          <View style={styles.bar}>\n            <Progress.Bar\n              progress={expense.saved / expense.goal || 0}\n              color=\"#05C473\"\n              unfilledColor=\"#DBDBDB\"\n              borderColor=\"#DBDBDB\"\n              width={width * 0.7 > 285 ? 285 : width * 0.7}\n              height={10}\n            />\n          </View>\n        </View>\n      </TouchableOpacity>\n\n      <View style={styles.transactionsExpenses}>\n        <Text style={styles.RecentTransactions}>Recent Transactions</Text>\n        <Text style={{ textAlign: \"center\", padding: 10 }}>none</Text>\n      </View>\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  linearGradient: {\n    flex: 1,\n    borderRadius: 23,\n    alignSelf: \"center\",\n    marginTop: Platform.OS === \"web\" ? \"-35%\" : \"-30%\",\n  },\n  expenseContainer: {\n    padding: 10,\n  },\n  budgetText: {\n    textAlign: \"center\",\n    fontSize: 17,\n    fontFamily: \"Sarabun_700Bold\",\n    color: \"#FFFFFF\",\n  },\n  savingText: {\n    textAlign: \"center\",\n    fontSize: 40,\n    fontFamily: \"Sarabun_700Bold\",\n    color: \"#000000\",\n  },\n  budgetTextTop: {\n    textAlign: \"center\",\n    fontSize: 40,\n    fontWeight: \"bold\",\n    fontFamily: \"Sarabun_400Regular\",\n    color: \"#FFFFFF\",\n  },\n  budgetTextBottom: {\n    textAlign: \"center\",\n    fontSize: 14,\n    fontFamily: \"Sarabun_300Light\",\n    padding: 10,\n    paddingBottom: 0,\n  },\n  toggleArrow: {\n    marginLeft: 22,\n  },\n  bar: {\n    alignItems: \"center\",\n  },\n  exitIcon: {\n    paddingRight: 10,\n    paddingTop: 10,\n    alignSelf: \"flex-end\",\n  },\n  modal: {\n    backgroundColor: \"#FFFFFF\",\n    borderRadius: 11,\n    margin: 20,\n    padding: 20,\n  },\n  transactionsExpenses: {\n    backgroundColor: \"#ffffff\",\n    borderRadius: 23,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n  RecentTransactions: {\n    textAlign: \"center\",\n    padding: 10,\n    fontSize: 17,\n    fontFamily: \"Sarabun_400Regular\",\n    color: \"#000000\",\n    backgroundColor: \"#EEEEEE\",\n    borderRadius: 23,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n});\n","import React, { useEffect } from \"react\";\r\nimport { View, TouchableOpacity } from \"react-native\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ExpenseType, GlobalStateType } from \"../Utils/types\";\r\nimport ExpenseCard from \"./ExpenseCard\";\r\nimport ExpenseDetailView from \"./ExpenseDetailView\";\r\nimport { setSelectedId } from \"../Utils/expenseSlice\";\r\nimport { setExpenseDetailsModalVisiblity } from \"../Utils/appSlice\";\r\n\r\ninterface Props {\r\n\tsetAmount: React.Dispatch<React.SetStateAction<number>>;\r\n\tsetLabel: React.Dispatch<React.SetStateAction<string>>;\r\n\texpense: ExpenseType;\r\n\tsetExpense: React.Dispatch<React.SetStateAction<ExpenseType>>;\r\n}\r\nconst ExpenseList = ({ setAmount, setLabel, expense, setExpense }: Props) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst expenses = useSelector((state: GlobalStateType) => state.expenses.list);\r\n\tconst appData = useSelector((state: GlobalStateType) => state.app);\r\n\tuseEffect(() => {\r\n\t\tsetAmount(expense ? expense.saved : 0);\r\n\t\tsetLabel(expense ? expense.label : \"\");\r\n\t}, [expense]);\r\n\tconst generateExpenses = expenses.map((expense, index) => (\r\n    <TouchableOpacity\r\n\t\tkey={index}\r\n\t\tonPress={() => {\r\n\t\t\tdispatch(setExpenseDetailsModalVisiblity(true));\r\n\t\t\tdispatch(setSelectedId(index));\r\n\t\t\tsetExpense(expense);\r\n\t\t}}\r\n    >\r\n\t\t<ExpenseCard expense={expense} />\r\n    </TouchableOpacity>\r\n\t));\r\n\treturn (\r\n    <>\r\n\t\t{appData.expenseDetailsModalVisiblity ? (\r\n\t\t\t<ExpenseDetailView />\r\n\t\t) : (\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {generateExpenses}\r\n\t\t\t</View>\r\n\t\t)}\r\n    </>\r\n);\r\n};\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\nimport { TouchableOpacity, View } from \"react-native\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { AccountType } from \"../Utils/types\";\r\n\r\ninterface Props {\r\n  setIsVisible: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setAccount: React.Dispatch<React.SetStateAction<AccountType>>;\r\n  setMode: React.Dispatch<React.SetStateAction<\"edit\" | \"add\">>;\r\n  blankAccount: AccountType;\r\n}\r\nconst AddAccountButton = ({\r\n  setIsVisible,\r\n  setAccount,\r\n  setMode,\r\n  blankAccount,\r\n}: Props) => {\r\n  return (\r\n    <View>\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          setIsVisible(true);\r\n          setAccount(blankAccount);\r\n          setMode(\"add\");\r\n        }}\r\n      >\r\n        <AntDesign\r\n          name=\"plus\"\r\n          size={24}\r\n          color=\"black\"\r\n          style={{ width: \"100%\", textAlign: \"center\" }}\r\n        />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AddAccountButton;\r\n","import {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  Modal,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport uuid from \"react-native-uuid\";\r\nimport React, { memo, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAccount, editAccount, deleteAccount } from \"../Utils/accountSlice\";\r\nimport { GlobalStateType, AccountType } from \"../Utils/types\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\n\r\ninterface Props {\r\n  account: AccountType;\r\n  isVisible: boolean;\r\n  setIsVisible: React.Dispatch<React.SetStateAction<boolean>>;\r\n  mode: string;\r\n  setAccount: React.Dispatch<React.SetStateAction<AccountType>>;\r\n}\r\n\r\nconst AccountModal = memo<Props>(\r\n  ({ account, isVisible, setIsVisible, setAccount, mode }) => {\r\n    mode = mode ? mode : \"add\";\r\n    const [amount, setAmount] = useState<number>(0);\r\n    const [label, setLabel] = useState<string>(\"\");\r\n    const [confirm, setConfirm] = useState<boolean>(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const accounts = useSelector(\r\n      (state: GlobalStateType) => state.accounts.list\r\n    );\r\n    const blankAccount: AccountType = {\r\n      label: \"\",\r\n      saved: 0,\r\n      goal: 0,\r\n      date: Date.now(),\r\n      id: \"\",\r\n    };\r\n\r\n    useEffect(() => {\r\n      setAmount(account ? account.saved : 0);\r\n      setLabel(account ? account.label : \"\");\r\n    }, [account]);\r\n\r\n    const runAddAccount = () => {\r\n      const newAccount = {\r\n        label: label,\r\n        saved: amount,\r\n        goal: amount,\r\n        date: Date.now(),\r\n        id: uuid.v4().toString(),\r\n      };\r\n      dispatch(addAccount(newAccount));\r\n      setIsVisible(false);\r\n      setAccount(blankAccount);\r\n    };\r\n\r\n    const runEditAccount = () => {\r\n      const accountUpdate = {\r\n        ...account,\r\n        label: label,\r\n        saved: amount,\r\n      };\r\n      dispatch(editAccount(accountUpdate));\r\n      setIsVisible(false);\r\n      setAccount(blankAccount);\r\n    };\r\n\r\n    const runDeleteAccount = () => {\r\n      dispatch(deleteAccount(account.id));\r\n      setIsVisible(false);\r\n    };\r\n\r\n    const onChanged = (text: any) => {\r\n      let newText: any = \"\";\r\n      let numbers = \"0123456789.\";\r\n      for (let i = 0; i < text.length; i++) {\r\n        if (numbers.indexOf(text[i]) > -1) {\r\n          newText = newText + text[i];\r\n        } else {\r\n          alert(\"please enter numbers only\");\r\n        }\r\n      }\r\n      setAmount(Number(newText));\r\n    };\r\n\r\n    const displayConfirm = () => (\r\n      <Modal\r\n        style={{ justifyContent: \"center\", alignItems: \"center\" }}\r\n        transparent\r\n      >\r\n        <View style={styles.confirmContainer}>\r\n          <View>\r\n            <Text style={styles.buttonText}>Delete {account.label}?</Text>\r\n            <View>\r\n              <TouchableOpacity\r\n                style={styles.confirmButton}\r\n                onPress={() => {\r\n                  runDeleteAccount();\r\n                  setConfirm(false);\r\n                }}\r\n              >\r\n                <Text style={styles.confirmButtonText}>Ok</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setConfirm(false);\r\n                  setIsVisible(true);\r\n                }}\r\n                style={styles.confirmButton}\r\n              >\r\n                <Text style={styles.confirmButtonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    );\r\n\r\n    return (\r\n      <View>\r\n        {confirm && displayConfirm()}\r\n        <Modal\r\n          visible={isVisible}\r\n          style={{ justifyContent: \"center\", alignItems: \"center\" }}\r\n          transparent\r\n        >\r\n          <View style={styles.container}>\r\n            <TouchableOpacity onPress={() => setIsVisible(false)}>\r\n              <Feather\r\n                style={styles.exitIcon}\r\n                name=\"x-circle\"\r\n                size={24}\r\n                color=\"black\"\r\n              />\r\n            </TouchableOpacity>\r\n            <View style={styles.textInputs}>\r\n              {/* This will include the text input for the amount */}\r\n              <TextInput\r\n                style={styles.amountInput}\r\n                placeholder=\"amount\"\r\n                onChangeText={(text) => onChanged(text)}\r\n                value={amount?.toString()}\r\n              />\r\n              {/* This will include the text input for the label */}\r\n              <TextInput\r\n                style={styles.labelInput}\r\n                placeholder=\"label\"\r\n                onChangeText={setLabel}\r\n                value={label}\r\n              />\r\n            </View>\r\n            {mode === \"add\" ? (\r\n              <TouchableOpacity\r\n                style={styles.addButton}\r\n                onPress={runAddAccount}\r\n              >\r\n                <Text style={styles.buttonText}>Add Account</Text>\r\n              </TouchableOpacity>\r\n            ) : (\r\n              <>\r\n                <TouchableOpacity\r\n                  style={styles.addButton}\r\n                  onPress={runEditAccount}\r\n                >\r\n                  <Text style={styles.buttonText}>Update</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={styles.addButton}\r\n                  onPress={() => {\r\n                    setConfirm(true);\r\n                    setIsVisible(false);\r\n                  }}\r\n                >\r\n                  <Text style={styles.buttonText}>Delete</Text>\r\n                </TouchableOpacity>\r\n              </>\r\n            )}\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    );\r\n  }\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: 180,\r\n    height: 264,\r\n    backgroundColor: \"#D9D9D9\",\r\n    borderRadius: 23,\r\n    alignSelf: \"center\",\r\n  },\r\n  amountInput: {\r\n    width: 130,\r\n    height: 34,\r\n    backgroundColor: \"#FFFFFF\",\r\n    marginBottom: 2,\r\n    textAlign: \"center\",\r\n  },\r\n  labelInput: {\r\n    width: 130,\r\n    height: 34,\r\n    backgroundColor: \"#FFFFFF\",\r\n    marginBottom: 24,\r\n    textAlign: \"center\",\r\n  },\r\n  addButton: {\r\n    width: 140,\r\n    height: 44,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"white\",\r\n    textAlign: \"center\",\r\n    marginBottom: \"2%\",\r\n  },\r\n  wrapButton: {\r\n    width: 140,\r\n    height: 44,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonText: {\r\n    textAlign: \"center\",\r\n    fontSize: 17,\r\n    color: \"#000000\",\r\n    paddingTop: 7,\r\n    paddingBottom: 7,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    width: \"100%\",\r\n    fontFamily: \"Sarabun_300Light\",\r\n  },\r\n  textInputs: {\r\n    marginTop: 37,\r\n    alignSelf: \"center\",\r\n  },\r\n  exitIcon: {\r\n    paddingRight: 10,\r\n    paddingTop: 10,\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  confirmContainer: {\r\n    width: 180,\r\n    height: 264,\r\n    backgroundColor: \"#D9D9D9\",\r\n    borderRadius: 23,\r\n    alignSelf: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  confirmButton: {\r\n    width: 100,\r\n    height: 30,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"white\",\r\n    textAlign: \"center\",\r\n    marginBottom: \"2%\",\r\n  },\r\n  confirmButtonText: {\r\n    textAlign: \"center\",\r\n    fontSize: 14,\r\n    color: \"#000000\",\r\n    width: \"100%\",\r\n    fontFamily: \"Sarabun_300Light\",\r\n  },\r\n});\r\n\r\nexport default AccountModal;\r\n","import { View, StyleSheet, Text, TouchableOpacity } from \"react-native\";\nimport React, { FC, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AddAccountButton from \"./AddAccountButton\";\nimport { AccountType, GlobalStateType } from \"../Utils/types\";\nimport AccountModal from \"./AccountModal\";\n\nconst AccountsDropDown: FC = () => {\n  const blankAccount: AccountType = {\n    label: \"\",\n    saved: 0,\n    goal: 0,\n    date: Date.now(),\n    id: \"\",\n  };\n\n  const listOfAccounts = useSelector(\n    (state: GlobalStateType) => state.accounts.list\n  );\n\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [account, setAccount] = useState<AccountType>(blankAccount);\n  const [mode, setMode] = useState<\"edit\" | \"add\">(\"add\");\n\n  const generateList = listOfAccounts.map((account) => (\n    <TouchableOpacity\n      key={account.id}\n      style={styles.container}\n      onPress={() => {\n        setMode(\"edit\");\n        setAccount(account);\n        setIsVisible(true);\n      }}\n    >\n      <Text style={styles.label}>{account.label}</Text>\n      <Text style={styles.saved}>${account.saved.toLocaleString()}</Text>\n    </TouchableOpacity>\n  ));\n\n  return (\n    <View style={styles.dropDownWrapper}>\n      <Text style={styles.heading}>Accounts</Text>\n      {generateList}\n      <AccountModal\n        account={account}\n        isVisible={isVisible}\n        setIsVisible={setIsVisible}\n        mode={mode}\n        setAccount={setAccount}\n      />\n      <AddAccountButton\n        setAccount={setAccount}\n        setIsVisible={setIsVisible}\n        setMode={setMode}\n        blankAccount={blankAccount}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  label: {\n    fontFamily: \"Sarabun_300Light\",\n    width: 160,\n    lineHeight: 24,\n  },\n  saved: {\n    color: \"#05C473\",\n    fontFamily: \"Sarabun_600SemiBold\",\n    width: 80,\n    textAlign: \"right\",\n    lineHeight: 24,\n  },\n  dropDownWrapper: {\n    alignSelf: \"center\",\n    width: \"100%\",\n    backgroundColor: \"#F5F5F5\",\n    borderBottomLeftRadius: 21,\n    borderBottomRightRadius: 21,\n    padding: 15,\n  },\n  heading: {\n    fontFamily: \"Sarabun_700Bold\",\n    fontSize: 18,\n    lineHeight: 28,\n  },\n  horizontalRule: {\n    height: 1,\n    width: 240,\n    backgroundColor: \"#212121\",\n  },\n  headingContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n});\n\nexport default AccountsDropDown;\n","import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GlobalStateType } from \"../Utils/types\";\nimport { recalculateBudget } from \"../Utils/remainingBudgetSlice\";\n// cannot deep require import according to\n// https://github.com/oblador/react-native-progress#progressbar\nimport * as Progress from \"react-native-progress\";\nimport AccountsDropDown from \"./AccountsDropDown\";\nimport { Entypo } from \"@expo/vector-icons\";\n\nexport default function BudgetCard() {\n  const [budgetDetails, setBudgetDetails] = useState<boolean>(false);\n  const moneyRem = useSelector(\n    (state: GlobalStateType) => state.budgets.remaining.totalRemaining\n  );\n  const moneyTotal = useSelector(\n    (state: GlobalStateType) => state.budgets.remaining.accountsTotal\n  );\n  const accounts = useSelector((state: GlobalStateType) => state.accounts.list);\n  const expenses = useSelector((state: GlobalStateType) => state.expenses.list);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(recalculateBudget({ accounts, expenses }));\n  }, [accounts, expenses]);\n\n  return (\n    <>\n      <View style={styles.container}>\n        <View style={styles.budgetWrapper}>\n          <Text style={styles.budgetTextTop}>Extra Money:</Text>\n          <Text style={styles.budgetText}>${moneyRem}</Text>\n          <Text style={styles.budgetTextBottom}>\n            ${moneyRem} of ${moneyTotal}\n          </Text>\n          <View style={styles.bar}>\n            <Progress.Bar\n              progress={moneyRem / moneyTotal || 0}\n              unfilledColor=\"#DBDBDB\"\n              borderColor=\"rgba(0,0,0,0)\"\n              borderRadius={8}\n              width={235}\n              height={10}\n              color=\"#316BB4\"\n            />\n          </View>\n        </View>\n        {budgetDetails ? <AccountsDropDown /> : null}\n      </View>\n      <View style={styles.toggleWrap}>\n        <Entypo\n          style={styles.toggleDropDown}\n          name=\"dots-three-horizontal\"\n          size={18}\n          color=\"white\"\n          onPress={() => setBudgetDetails(!budgetDetails)}\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    minHeight: 180,\n    borderRadius: 23,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.22,\n    shadowRadius: 2.22,\n    elevation: 3,\n    width: \"98%\",\n  },\n  budgetWrapper: {\n    paddingTop: 12,\n    paddingRight: 40,\n    paddingLeft: 40,\n  },\n  budgetText: {\n    textAlign: \"center\",\n    fontSize: 40,\n    fontFamily: \"Sarabun_700Bold\",\n    lineHeight: 45,\n  },\n  budgetTextTop: {\n    textAlign: \"center\",\n    fontSize: 16,\n    fontFamily: \"Sarabun_600SemiBold\",\n  },\n  budgetTextBottom: {\n    textAlign: \"center\",\n    fontSize: 16,\n    fontFamily: \"Sarabun_300Light\",\n  },\n  toggleWrap: {\n    width: 40,\n    height: 15,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    backgroundColor: \"#215290\",\n  },\n  toggleDropDown: {\n    marginTop: -2,\n    marginBottom: -2,\n  },\n  bar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: 13,\n    paddingLeft: 23,\n    paddingRight: 23,\n    paddingBottom: 40,\n  },\n});\n","import { useState, useCallback } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  TouchableOpacity,\n  Button,\n  Platform,\n  Modal,\n} from \"react-native\";\nimport uuid from \"react-native-uuid\";\nimport { DatePickerModal } from \"react-native-paper-dates\"; //date picker for web\nimport { Feather } from \"@expo/vector-icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GlobalStateType, ExpenseType } from \"../Utils/types\";\nimport { addExpense, deleteExpense, editExpense } from \"../Utils/expenseSlice\";\nimport {\n  setExpenseModalVisibility,\n  setExpenseDetailsModalVisiblity,\n} from \"../Utils/appSlice\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\"; //date picker for android/ios\ninterface Props {\n  amount: number;\n  setAmount: React.Dispatch<React.SetStateAction<number>>;\n  label: string;\n  setLabel: React.Dispatch<React.SetStateAction<string>>;\n  expense: ExpenseType;\n}\nconst ExpenseModal = ({\n  amount,\n  setAmount,\n  label,\n  setLabel,\n  expense,\n}: Props) => {\n  const [date, setDate] = useState(0);\n  const [open, setOpen] = useState(false);\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n  const [confirm, setConfirm] = useState<boolean>(false);\n  const expenses = useSelector((state: GlobalStateType) => state.expenses.list);\n  const appData = useSelector((state: GlobalStateType) => state.app);\n\n  const dispatch = useDispatch();\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true);\n  };\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const onDismissSingle = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const onConfirmSingle = useCallback(\n    (params) => {\n      setOpen(false);\n      setDate(params.date);\n    },\n    [setOpen, setDate]\n  );\n\n  const handleConfirm = (date: Date) => {\n    setDate(Number(date));\n    hideDatePicker();\n    onDismissSingle;\n  };\n\n  const onChangeTextAmount = (number: any) => {\n    let newText: any = \"\";\n    let newNumber = \"0123456789.\";\n    for (let i = 0; i < number.length; i++) {\n      if (newNumber.indexOf(number[i]) > -1) {\n        newText = newText + number[i];\n      } else {\n        alert(\"please enter number values only\");\n      }\n    }\n    setAmount(Number(newText));\n  };\n\n  const runAddExpense = () => {\n    if (label.length > 0 && amount > 0) {\n      setLabel(label);\n      setAmount(amount);\n      const newExpense = {\n        label: label,\n        saved: amount,\n        goal: amount,\n        date: date > 0 ? Number(date) : Date.now(),\n        id: uuid.v4().toString(),\n      };\n      dispatch(addExpense(newExpense));\n      dispatch(setExpenseModalVisibility(false));\n    } else {\n      alert(\"There is an empty value in one of the inputs\");\n    }\n  };\n  const runEditExpense = () => {\n    const expenseUpdate: ExpenseType = {\n      ...expense,\n      label: label,\n      saved: amount,\n    };\n    dispatch(editExpense(expenseUpdate));\n    dispatch(setExpenseModalVisibility(false));\n  };\n  const runDeleteExpenses = () => {\n    dispatch(deleteExpense(expense.id));\n    dispatch(setExpenseDetailsModalVisiblity(false));\n  };\n  const displayConfirm = () => (\n    <Modal\n      style={{ justifyContent: \"center\", alignItems: \"center\" }}\n      transparent\n    >\n      <View style={styles.confirmContainer}>\n        <View>\n          <Text style={styles.buttonText}>Delete {expense.label}?</Text>\n          <View>\n            <TouchableOpacity\n              style={styles.buttonStyle}\n              onPress={() => {\n                runDeleteExpenses();\n                setConfirm(false);\n              }}\n            >\n              <Text style={{ fontSize: 16, alignSelf: \"center\" }}>Ok</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                setConfirm(false);\n                setExpenseModalVisibility(true);\n              }}\n              style={styles.buttonStyle}\n            >\n              <Text style={{ fontSize: 16, alignSelf: \"center\" }}>Cancel</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n\n  return (\n    <View style={styles.container}>\n      {confirm && displayConfirm()}\n      <Modal visible={appData?.expenseModalVisibility} transparent={true}>\n        {/* This is where the Form starts */}\n        <View style={styles.modalSize}>\n          <View style={styles.titleContainer}>\n            <View style={{ alignSelf: \"flex-end\" }}>\n              <TouchableOpacity\n                style={styles.xIcon}\n                onPress={() => {\n                  dispatch(setExpenseModalVisibility(false));\n                }}\n              >\n                <Feather\n                  name=\"x-circle\"\n                  size={30}\n                  color=\"black\"\n                  style={{ paddingRight: 10 }}\n                />\n              </TouchableOpacity>\n            </View>\n            <View>\n              <Text style={styles.titleText}>\n                {appData?.modalMode === \"add\"\n                  ? \"Add Expense\"\n                  : \"Update Expense\"}\n              </Text>\n            </View>\n          </View>\n          <View style={styles.subContainer}>\n            <Text style={[styles.textContainer, { paddingRight: 40 }]}>\n              Label:\n            </Text>\n            <TextInput\n              style={styles.inputStyle}\n              value={label}\n              onChangeText={(text) => {\n                setLabel(text);\n              }}\n            />\n          </View>\n          <View style={styles.subContainer}>\n            <Text style={[styles.textContainer, { paddingRight: 20 }]}>\n              Amount:\n            </Text>\n            <TextInput\n              style={styles.inputStyle}\n              value={\n                appData?.modalMode !== \"add\" ? amount?.toString() : undefined\n              }\n              onChangeText={(number) => onChangeTextAmount(number)}\n            />\n          </View>\n          <View style={styles.subContainer}>\n            <Text style={[styles.textContainer, { paddingRight: 5 }]}>\n              Due Date:\n            </Text>\n            {Platform.OS === \"web\" ? (\n              <View>\n                <Button title=\"Pick the date\" onPress={() => setOpen(true)} />\n                <DatePickerModal\n                  locale=\"en\"\n                  mode=\"single\"\n                  visible={open}\n                  onDismiss={onDismissSingle}\n                  date={new Date()}\n                  onConfirm={onConfirmSingle}\n                />\n              </View>\n            ) : (\n              <View>\n                <Button title=\"Pick the date\" onPress={showDatePicker} />\n                <DateTimePickerModal\n                  isVisible={isDatePickerVisible}\n                  mode=\"date\"\n                  onConfirm={handleConfirm}\n                  onCancel={hideDatePicker}\n                />\n              </View>\n            )}\n          </View>\n          {appData?.modalMode === \"add\" ? (\n            <TouchableOpacity\n              onPress={() => {\n                runAddExpense();\n                setLabel(\"\");\n                setAmount(0);\n                setDate(0);\n                dispatch(setExpenseModalVisibility(false));\n              }}\n              style={styles.buttonStyle}\n            >\n              <Text style={{ fontSize: 16 }}>Confirm</Text>\n            </TouchableOpacity>\n          ) : (\n            <View style={styles.buttonWrap}>\n              <TouchableOpacity\n                onPress={() => {\n                  runEditExpense();\n                  setLabel(\"\");\n                  setAmount(0);\n                  setDate(0);\n                  dispatch(setExpenseModalVisibility(false));\n                }}\n                style={styles.buttonStyle}\n              >\n                <Text style={{ fontSize: 16 }}>Update</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={styles.buttonStyle}\n                onPress={() => {\n                  setConfirm(true);\n                  dispatch(setExpenseModalVisibility(false));\n                }}\n              >\n                <Text style={{ fontSize: 16, alignSelf: \"center\" }}>\n                  Delete\n                </Text>\n              </TouchableOpacity>\n            </View>\n          )}\n\n          {/* This is where the form ends */}\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  titleContainer: {\n    alignItems: \"center\",\n    paddingBottom: 30,\n  },\n  titleText: {\n    fontSize: 35,\n  },\n  inputStyle: {\n    width: 150,\n    height: 30,\n    borderWidth: 1,\n    borderColor: \"#000\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    backgroundColor: \"#fff\",\n    paddingLeft: 10,\n  },\n  xIcon: {\n    alignSelf: \"flex-end\",\n  },\n  buttonWrap: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n  },\n  buttonStyle: {\n    alignSelf: \"center\",\n    width: 80,\n    height: 40,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#000\",\n    backgroundColor: \"#828282\",\n    marginBottom: 5,\n  },\n  subContainer: {\n    flexDirection: \"row\",\n    paddingBottom: 10,\n  },\n  textContainer: {\n    paddingLeft: 20,\n    fontSize: 20,\n  },\n  modalSize: {\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    width: 350,\n    height: 300,\n    borderWidth: 1,\n    borderRadius: 20,\n    marginTop: 210,\n    padding: 10,\n    borderColor: \"#000\",\n    backgroundColor: \"#DADADA\",\n  },\n  confirmContainer: {\n    width: 180,\n    height: 264,\n    backgroundColor: \"#D9D9D9\",\n    borderRadius: 23,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonText: {\n    textAlign: \"center\",\n    fontSize: 17,\n    color: \"#000000\",\n    paddingTop: 7,\n    paddingBottom: 7,\n    paddingLeft: 20,\n    paddingRight: 20,\n    width: \"100%\",\n    fontFamily: \"Sarabun_300Light\",\n  },\n});\n\nexport default ExpenseModal;\n","import { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { GlobalStateType } from \"../../Utils/types\";\nimport { setModalMode, setExpenseModalVisibility } from \"../../Utils/appSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nconst AddExpense = () => {\n  const dispatch = useDispatch();\n\n  const appData = useSelector((state: GlobalStateType) => state.app);\n\n  return (\n    <>\n      {!appData.expenseDetailsModalVisiblity && (\n        <TouchableOpacity\n          style={styles.plusModal}\n          onPress={() => {\n            dispatch(setExpenseModalVisibility(true));\n            dispatch(setModalMode(\"add\"));\n          }}\n        >\n          <AntDesign name=\"pluscircle\" size={48} color=\"#4D62BF\" />\n        </TouchableOpacity>\n      )}\n    </>\n  );\n};\n\nexport default AddExpense;\n\nconst styles = StyleSheet.create({\n  plusModal: {\n    position: \"absolute\",\n    bottom: 15,\n    right: 15,\n  },\n});\n","import { View, StyleSheet, ScrollView } from \"react-native\";\nimport { FC, useState } from \"react\";\nimport ExpenseList from \"../Components/ExpenseList\";\nimport BudgetCard from \"../Components/BudgetCard\";\nimport { ExpenseType } from \"../Utils/types\";\nimport ExpenseModal from \"../Components/ExpenseModal\";\nimport AddExpense from \"../Components/Expenses/AddExpense\";\nimport uuid from \"react-native-uuid\";\n\nimport type { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport { RootStackParamList } from \"../Utils/types\";\n\ntype Props = NativeStackScreenProps<RootStackParamList, \"Overview\">;\n\nconst Overview: FC<Props> = () => {\n  const blankExpense: ExpenseType = {\n    label: \"\",\n    saved: 0,\n    goal: 0,\n    date: Date.now(),\n    id: uuid.v4().toString(),\n  };\n\n  const [label, setLabel] = useState<string>(\"\");\n  const [amount, setAmount] = useState<number>(0);\n  const [expense, setExpense] = useState<ExpenseType>(blankExpense);\n\n  return (\n    <View style={styles.container}>\n      <ScrollView style={styles.scrollViewContainer}>\n        <View style={styles.budgetCardHolder}>\n          <BudgetCard />\n        </View>\n        <View style={styles.expenseCardHolder}>\n          <ExpenseList\n            setAmount={setAmount}\n            setLabel={setLabel}\n            expense={expense}\n            setExpense={setExpense}\n          />\n        </View>\n      </ScrollView>\n      <View>\n        <ExpenseModal\n          amount={amount}\n          setAmount={setAmount}\n          label={label}\n          setLabel={setLabel}\n          expense={expense}\n        />\n      </View>\n      <AddExpense />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15,\n    paddingTop: 0,\n  },\n  scrollViewContainer: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  budgetCardHolder: {\n    width: \"100%\",\n  },\n  expenseCardHolder: {\n    marginTop: 20,\n    alignSelf: \"center\",\n  },\n});\n\nexport default Overview;\n","import React, { useState, FC } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  StyleSheet,\r\n  Pressable,\r\n  Linking,\r\n} from \"react-native\";\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport type { NativeStackScreenProps } from '@react-navigation/native-stack'; \r\nimport { RootStackParamList } from \"../Utils/types\";\r\n\r\ntype Props = NativeStackScreenProps<RootStackParamList, \"ContactForm\">\r\n\r\n\r\nconst ContactForm:FC<Props> = ({ navigation }) => {\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [subject, setSubject] = useState<string>(\"placeholder 1\");\r\n  const [message, setMessage] = useState<string>(\"\");\r\n \r\n  \r\n  const sendContactForm = () => {\r\n    if (!email.trim()) {\r\n      alert(\"Please Enter Email\");\r\n      return;\r\n    }\r\n    if (!message.trim()) {\r\n      alert(\"Please Add Message\");\r\n      return;\r\n    }\r\n    let mailto = `mailto:jlucero@alphaworks.tech`;\r\n    mailto += `?subject=${subject}`;\r\n    mailto += `&body=${message}`;\r\n    Linking.openURL(mailto);\r\n    alert(\"Message Sent!\");\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <KeyboardAwareScrollView>\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Contact Us</Text>\r\n\r\n      {/* Subject Text Input */}\r\n      <View>\r\n        <Text style={styles.inputHeaders}>Email</Text>\r\n        <TextInput\r\n          style={[styles.inputs,styles.email]}\r\n          onChangeText={(email) => setEmail(email)}\r\n          value={email}\r\n          placeholder=\"example@domain.com\"\r\n        />\r\n\r\n      {/* Dropdown Menu */}\r\n        <Text style={[styles.inputHeaders]}>Subject</Text>\r\n        <Picker\r\n          style={styles.picker}\r\n          selectedValue={subject}\r\n          onValueChange={\r\n            (value, index) =>\r\n            setSubject(value)\r\n          }\r\n        >\r\n        <Picker.Item \r\n          label=\"placeholder 1\" \r\n          value=\"placeholder 1\"\r\n          />\r\n        <Picker.Item \r\n          label=\"placeholder 2\" \r\n          value=\"placeholder 2\"\r\n          />\r\n        </Picker>\r\n\r\n      {/* Message text input */}\r\n        <Text style={styles.inputHeaders}>Enter Message</Text>\r\n        <TextInput\r\n          style={[styles.inputs,styles.messageInput]}\r\n          onChangeText={(e) => setMessage(e)}\r\n          placeholder=\"Write your message here...\"\r\n          value={message}\r\n          numberOfLines={7}\r\n          multiline={true}\r\n        />\r\n      </View>\r\n\r\n      <Pressable \r\n        onPress={sendContactForm}\r\n        style={styles.submitButton}\r\n      >\r\n        <Text style={styles.buttonText}>Send</Text>\r\n      </Pressable>\r\n    </View>\r\n    </KeyboardAwareScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n      alignItems: \"center\",\r\n      backgroundColor: \"#215290\",\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n    header:{\r\n      fontSize: 30,\r\n      marginTop: 25,\r\n      marginBottom: 25,\r\n      color: \"#FFFFFF\",\r\n      fontFamily: \"Sarabun_700Bold\"\r\n    },\r\n    inputHeaders:{\r\n      alignSelf: 'flex-start',\r\n      fontSize: 17,\r\n      color: \"#FFFFFF\",\r\n      fontFamily: \"Sarabun_700Bold\",\r\n      marginLeft: 30,\r\n      marginRight: 30,\r\n      marginTop: 8,\r\n      marginBottom: 5,\r\n    },\r\n    inputs: {\r\n      width: 350,\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 10,\r\n      marginLeft: 30,\r\n      marginRight: 30,\r\n      marginTop: 6,\r\n      marginBottom: 20,\r\n    },\r\n    email:{\r\n      height: 62,\r\n      backgroundColor: '#FFFFFF',\r\n      padding: 10,\r\n      fontFamily: \"Sarabun_600SemiBold\",\r\n      fontSize: 15,\r\n    },\r\n    picker: {\r\n      height: 62,\r\n      width: 350,\r\n      marginTop: 6,\r\n      marginLeft: 30,\r\n      backgroundColor: \"#FFFFFF\",\r\n      borderRadius: 10,\r\n      justifyContent: \"center\",\r\n    },\r\n    messageInput:{\r\n      height: 170,\r\n      backgroundColor: '#FFFFFF',\r\n      fontFamily: \"Sarabun_600SemiBold\",\r\n      fontSize: 15,\r\n      paddingLeft: 10,\r\n    },\r\n    submitButton:{\r\n      marginTop: 30,\r\n      marginLeft: 30,\r\n      marginRight: 30,\r\n      marginBottom: 50,\r\n      width: 118,\r\n      height: 56,\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 5,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',    \r\n  },\r\n    buttonText:{\r\n      color: '#000000',\r\n      fontSize: 24,\r\n      fontFamily: \"Sarabun_700Bold\",\r\n    },\r\n});\r\n\r\nexport default ContactForm;\r\n","import React, { useEffect, FC, useState, useRef, useCallback } from \"react\";\r\nimport * as WebBrowser from \"expo-web-browser\";\r\nimport * as Google from \"expo-auth-session/providers/google\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  TouchableOpacity,\r\n  Animated,\r\n  Easing,\r\n  Platform,\r\n} from \"react-native\";\r\nimport logoCombinedImage from \"../Images/logo/logo_combined.png\";\r\nimport GoogleSignIn from \"../Images/btn_google_signin_dark_normal_web.png\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { GlobalStateType } from \"../Utils/types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setUserData, setIsLoggedIn } from \"../Utils/userDataSlice\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\n\r\nWebBrowser.maybeCompleteAuthSession();\r\nSplashScreen.preventAutoHideAsync();\r\n\r\nconst Login: FC = () => {\r\n  const splashImagesAnimation = useRef(new Animated.Value(0)).current;\r\n  const loginButtonAnimation = useRef(new Animated.Value(0)).current;\r\n\r\n  const userData = useSelector<GlobalStateType>((state) => state.user.data);\r\n  const appReady = useSelector<GlobalStateType>((state) => state.app.appReady);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [accessToken, setAccessToken] = useState<string | undefined>();\r\n\r\n  const [request, response, promptAsync] = Google.useAuthRequest({\r\n    expoClientId:\r\n      \"1038262737574-iddu4aellun0nlvpd5auvie2o35p39pu.apps.googleusercontent.com\",\r\n    webClientId:\r\n      \"1038262737574-j0un3526ir5mkdo2cno1fl7o0v3jlnla.apps.googleusercontent.com\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (response?.type === \"success\") {\r\n      setAccessToken(response?.authentication?.accessToken);\r\n    }\r\n  }, [response]);\r\n\r\n  useEffect(() => {\r\n    if (response?.type === \"success\") {\r\n      getUserData();\r\n    }\r\n  }, [accessToken]);\r\n\r\n  useEffect(() => {\r\n    if (response?.type === \"success\") {\r\n      dispatch(setIsLoggedIn(true));\r\n    }\r\n  }, [userData]);\r\n\r\n  async function getUserData() {\r\n    let userInfoResponse = await fetch(\r\n      \"https://www.googleapis.com/userinfo/v2/me\",\r\n      {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      }\r\n    );\r\n\r\n    userInfoResponse.json().then((data) => {\r\n      const responseUserData = {\r\n        firstName: data.given_name,\r\n        lastName: data.family_name,\r\n        avatar: data.picture,\r\n        email: data.email,\r\n      };\r\n      dispatch(setUserData(responseUserData));\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const playSplashAnimation = async (): Promise<void> => {\r\n      Animated.timing(splashImagesAnimation, {\r\n        delay: 2000,\r\n        toValue: -100,\r\n        duration: 2000,\r\n        useNativeDriver: Platform.OS === \"web\" ? false : true,\r\n        easing: Easing.bezier(0.65, 0, 0.35, 1),\r\n      }).start();\r\n      // }).start(() => setLoggedIn({ screen: \"login\" }));\r\n\r\n      Animated.timing(loginButtonAnimation, {\r\n        delay: 4000,\r\n        toValue: 1,\r\n        duration: 1200,\r\n        useNativeDriver: Platform.OS === \"web\" ? false : true,\r\n      }).start();\r\n      // }).start(() => setLoggedIn({ screen: \"login\" }));\r\n    };\r\n\r\n    if (appReady) playSplashAnimation();\r\n  }, [appReady]);\r\n\r\n  // hide splash screen after logo image is loaded to prevent flickers\r\n  const onLogoImageReady = useCallback(async () => {\r\n    await SplashScreen.hideAsync();\r\n  }, []);\r\n\r\n  return appReady ? (\r\n    <View style={styles.container}>\r\n      <LinearGradient\r\n        start={{ x: 0, y: 0 }}\r\n        end={{ x: 1.6, y: 1 }}\r\n        colors={[\"#2383C9\", \"#5A1E70\"]}\r\n        style={styles.container}\r\n      >\r\n        <Animated.View\r\n          style={[\r\n            styles.splashImageContainer,\r\n            {\r\n              transform: [{ translateY: splashImagesAnimation }],\r\n            },\r\n          ]}\r\n        >\r\n          <Image\r\n            style={{\r\n              maxWidth: 215,\r\n              width: \"50%\",\r\n              height: 352,\r\n            }}\r\n            resizeMode=\"contain\"\r\n            source={logoCombinedImage}\r\n            fadeDuration={0}\r\n            onLoadEnd={onLogoImageReady}\r\n          />\r\n        </Animated.View>\r\n        <Animated.View\r\n          style={{\r\n            opacity: loginButtonAnimation,\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            disabled={!request}\r\n            onPress={() => {\r\n              promptAsync({ showInRecents: false });\r\n            }}\r\n            style={styles.loginButton}\r\n          >\r\n            <Image\r\n              style={{\r\n                maxWidth: \"90%\",\r\n                width: 191,\r\n                height: 46,\r\n              }}\r\n              resizeMode=\"contain\"\r\n              source={GoogleSignIn}\r\n              fadeDuration={0}\r\n              onLoadEnd={onLogoImageReady}\r\n              accessible\r\n              accessibilityLabel=\"Sign In with Google\"\r\n            />\r\n          </TouchableOpacity>\r\n        </Animated.View>\r\n      </LinearGradient>\r\n    </View>\r\n  ) : null;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  bunnyLogo: {\r\n    width: 263,\r\n    height: 263,\r\n  },\r\n  karotSlogan: {\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n    width: 218,\r\n    height: 83,\r\n  },\r\n  loginButton: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  splashImageContainer: {\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default Login;\r\n","import { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport Header from \"./Header\";\nimport CustomDrawer from \"./CustomDrawer\";\nimport Overview from \"../Screens/Overview\";\nimport ContactForm from \"../Screens/ContactForm\";\nimport Login from \"../Screens/Login\";\nimport { MaterialIcons, FontAwesome } from \"@expo/vector-icons\";\n\nconst Drawer = createDrawerNavigator();\n\nfunction DrawerNavigator() {\n  const drawerOptions = {\n    drawerActiveBackgroundColor: \"#FFF\",\n    drawerActiveTintColor: \"#000\",\n    drawerLabelStyle: {\n      marginLeft: -15,\n      fontFamily: \"Sarabun_400Regular\",\n      fontSize: 20,\n    },\n  };\n\n  return (\n    <Drawer.Navigator\n      drawerContent={(props) => <CustomDrawer {...props} />}\n      screenOptions={{\n        header: (props) => <Header {...props} />,\n        ...drawerOptions,\n      }}\n    >\n      <Drawer.Screen\n        name=\"Overview\"\n        component={Overview}\n        options={{\n          drawerIcon: () => (\n            <MaterialIcons name=\"home\" size={24} color=\"black\" />\n          ),\n        }}\n      />\n      <Drawer.Screen\n        name=\"ContactForm\"\n        component={ContactForm}\n        options={{\n          drawerIcon: () => (\n            <FontAwesome name=\"phone\" size={24} color=\"black\" />\n          ),\n        }}\n      />\n      <Drawer.Screen\n        name=\"Logout\"\n        component={Login}\n        options={{\n          drawerIcon: () => (\n            <MaterialIcons name=\"person\" size={24} color=\"black\" />\n          ),\n        }}\n      />\n    </Drawer.Navigator>\n  );\n}\n\nexport default DrawerNavigator;\n","import { createStackNavigator } from \"@react-navigation/stack\";\nimport Login from \"../Screens/Login\";\n\nconst Stack = createStackNavigator();\n\nfunction AuthStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <Stack.Screen name=\"Login\" component={Login} />\n    </Stack.Navigator>\n  );\n}\n\nexport default AuthStack;\n","import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useSelector } from \"react-redux\";\nimport * as Linking from \"expo-linking\";\nimport useAssets from \"../Utils/useAssets\";\nimport { GlobalStateType } from \"../Utils/types\";\nimport DrawerNavigation from \"./DrawerNavigation\";\nimport AuthStack from \"./AuthStack\";\n\nconst urlPrefix = Linking.createURL(\"/\");\n\nconst RootNavigation = () => {\n  useAssets();\n\n  const isLoggedIn = useSelector<GlobalStateType>(\n    (state) => state.user.data.loggedIn\n  );\n\n  const rootPath = \"karot-saving-smart/\";\n\n  const config = {\n    screens: {\n      Login: `${rootPath}login`,\n      Logout: `${rootPath}logout`,\n      Overview: `${rootPath}overview`,\n      ContactForm: `${rootPath}contact`,\n    },\n  };\n\n  const linking = {\n    prefixes: [urlPrefix],\n    config,\n  };\n\n  return (\n    <NavigationContainer linking={linking}>\n      {isLoggedIn ? <DrawerNavigation /> : <AuthStack />}\n    </NavigationContainer>\n  );\n};\n\nexport default RootNavigation;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Sarabun_300Light,\n  Sarabun_400Regular,\n  Sarabun_600SemiBold,\n  Sarabun_700Bold,\n} from \"@expo-google-fonts/sarabun\";\nimport * as Font from \"expo-font\";\nimport { Asset } from \"expo-asset\";\nimport { GlobalStateType } from \"./types\";\nimport { setAppReady } from \"./appSlice\";\n\nexport default function useAssets() {\n  const appReady = useSelector<GlobalStateType>(\n    (state) => state.app.appReady\n  );\n  \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const loadAssets = async (): Promise<void> => {\n      try {\n        // preload any images, fonts, sounds, addtional assets\n        await Font.loadAsync({\n          Sarabun_300Light,\n          Sarabun_400Regular,\n          Sarabun_600SemiBold,\n          Sarabun_700Bold,\n        });\n        await Asset.loadAsync([\n          require(\"../Images/logo/logo_combined.png\"), \n          require(\"../Images/btn_google_signin_dark_normal_web.png\")\n      ]);\n      } catch (e) {\n        // handle errors\n      } finally {\n        dispatch(setAppReady(true));\n      }\n    };\n\n    if (!appReady) loadAssets();\n  }, [appReady]);\n}","import React from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport {\n  StyleSheet,\n  View,\n  SafeAreaView,\n  StatusBar as RNStatusBar,\n} from \"react-native\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { store } from \"./Utils/store\";\nimport { Provider } from \"react-redux\";\nimport RootNavigation from \"./Navigation/RootNavigation\";\n\n// Uncomment ReduxStateTest to test various state actions and reducers\n// import ReduxStateTest from \"./Components/ReduxStateTest\";\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <PaperProvider>\n        <SafeAreaView style={styles.safeAreaContainer}>\n          <View style={styles.container}>\n            {/* Uncomment ReduxStateTest to test various state actions and reducers */}\n            {/* <ReduxStateTest /> */}\n            <RootNavigation />\n          </View>\n          <StatusBar style=\"auto\" />\n        </SafeAreaView>\n      </PaperProvider>\n    </Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  safeAreaContainer: {\n    flex: 1,\n    paddingTop: RNStatusBar.currentHeight || 0,\n  },\n  container: {\n    justifyContent: \"center\",\n    height: \"100%\",\n    width: \"100%\",\n  },\n});\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}