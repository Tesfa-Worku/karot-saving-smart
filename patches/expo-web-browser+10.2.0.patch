diff --git a/node_modules/expo-web-browser/build/ExpoWebBrowser.web.js b/node_modules/expo-web-browser/build/ExpoWebBrowser.web.js
index 2370346..69520d9 100644
--- a/node_modules/expo-web-browser/build/ExpoWebBrowser.web.js
+++ b/node_modules/expo-web-browser/build/ExpoWebBrowser.web.js
@@ -14,11 +14,13 @@ function dismissPopup() {
         return;
     }
     popupWindow.close();
+    
     if (listenerMap.has(popupWindow)) {
-        const { listener, appStateListener, interval } = listenerMap.get(popupWindow);
+        const { listener, interval, appStateEventListner } = listenerMap.get(popupWindow);
         clearInterval(interval);
         window.removeEventListener('message', listener);
-        AppState.removeEventListener('change', appStateListener);
+        // AppState.removeEventListener('change', appStateListener);
+        appStateEventListner.remove();
         listenerMap.delete(popupWindow);
         const handle = window.localStorage.getItem(getHandle());
         if (handle) {
@@ -138,7 +140,7 @@ export default {
                     }
                 }
             };
-            AppState.addEventListener('change', appStateListener);
+            const appStateEventListner = AppState.addEventListener('change', appStateListener);
             // Check if the window has been closed every second.
             const interval = setInterval(() => {
                 if (popupWindow?.closed) {
@@ -153,6 +155,7 @@ export default {
                 listener,
                 interval,
                 appStateListener,
+                appStateEventListner,
             });
         });
     },
diff --git a/node_modules/expo-web-browser/build/WebBrowser.js b/node_modules/expo-web-browser/build/WebBrowser.js
index 784e77b..5a8fbdc 100644
--- a/node_modules/expo-web-browser/build/WebBrowser.js
+++ b/node_modules/expo-web-browser/build/WebBrowser.js
@@ -347,11 +347,13 @@ async function _openAuthSessionPolyfillAsync(startUrl, returnUrl, browserParams
         _stopWaitingForRedirect();
     }
 }
+let redirectHandlerListner;
 function _stopWaitingForRedirect() {
     if (!_redirectHandler) {
         throw new Error(`The WebBrowser auth session is in an invalid state with no redirect handler when one should be set`);
     }
-    Linking.removeEventListener('url', _redirectHandler);
+    // Linking.removeEventListener('url', _redirectHandler);
+    redirectHandlerListner.remove();
     _redirectHandler = null;
 }
 function _waitForRedirectAsync(returnUrl) {
@@ -361,7 +363,7 @@ function _waitForRedirectAsync(returnUrl) {
                 resolve({ url: event.url, type: 'success' });
             }
         };
-        Linking.addEventListener('url', _redirectHandler);
+        redirectHandlerListner = Linking.addEventListener('url', _redirectHandler);
     });
 }
 //# sourceMappingURL=WebBrowser.js.map
\ No newline at end of file
